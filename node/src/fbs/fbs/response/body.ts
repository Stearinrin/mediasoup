// automatically generated by the FlatBuffers compiler, do not modify

import { DumpResponse as FBS_Router_DumpResponse, DumpResponseT as FBS_Router_DumpResponseT } from '../../fbs/router/dump-response';
import { ConsumeResponse, ConsumeResponseT } from '../../fbs/transport/consume-response';
import { DumpResponse as FBS_Transport_DumpResponse, DumpResponseT as FBS_Transport_DumpResponseT } from '../../fbs/transport/dump-response';
import { DumpResponse as FBS_WebRtcServer_DumpResponse, DumpResponseT as FBS_WebRtcServer_DumpResponseT } from '../../fbs/web-rtc-server/dump-response';
import { DumpResponse, DumpResponseT } from '../../fbs/worker/dump-response';
import { ResourceUsageResponse, ResourceUsageResponseT } from '../../fbs/worker/resource-usage-response';


export enum Body {
  NONE = 0,
  FBS_Worker_DumpResponse = 1,
  FBS_Worker_ResourceUsageResponse = 2,
  FBS_WebRtcServer_DumpResponse = 3,
  FBS_Router_DumpResponse = 4,
  FBS_Transport_DumpResponse = 5,
  FBS_Transport_ConsumeResponse = 6
}

export function unionToBody(
  type: Body,
  accessor: (obj:ConsumeResponse|DumpResponse|FBS_Router_DumpResponse|FBS_Transport_DumpResponse|FBS_WebRtcServer_DumpResponse|ResourceUsageResponse) => ConsumeResponse|DumpResponse|FBS_Router_DumpResponse|FBS_Transport_DumpResponse|FBS_WebRtcServer_DumpResponse|ResourceUsageResponse|null
): ConsumeResponse|DumpResponse|FBS_Router_DumpResponse|FBS_Transport_DumpResponse|FBS_WebRtcServer_DumpResponse|ResourceUsageResponse|null {
  switch(Body[type]) {
    case 'NONE': return null; 
    case 'FBS_Worker_DumpResponse': return accessor(new DumpResponse())! as DumpResponse;
    case 'FBS_Worker_ResourceUsageResponse': return accessor(new ResourceUsageResponse())! as ResourceUsageResponse;
    case 'FBS_WebRtcServer_DumpResponse': return accessor(new FBS_WebRtcServer_DumpResponse())! as FBS_WebRtcServer_DumpResponse;
    case 'FBS_Router_DumpResponse': return accessor(new FBS_Router_DumpResponse())! as FBS_Router_DumpResponse;
    case 'FBS_Transport_DumpResponse': return accessor(new FBS_Transport_DumpResponse())! as FBS_Transport_DumpResponse;
    case 'FBS_Transport_ConsumeResponse': return accessor(new ConsumeResponse())! as ConsumeResponse;
    default: return null;
  }
}

export function unionListToBody(
  type: Body, 
  accessor: (index: number, obj:ConsumeResponse|DumpResponse|FBS_Router_DumpResponse|FBS_Transport_DumpResponse|FBS_WebRtcServer_DumpResponse|ResourceUsageResponse) => ConsumeResponse|DumpResponse|FBS_Router_DumpResponse|FBS_Transport_DumpResponse|FBS_WebRtcServer_DumpResponse|ResourceUsageResponse|null, 
  index: number
): ConsumeResponse|DumpResponse|FBS_Router_DumpResponse|FBS_Transport_DumpResponse|FBS_WebRtcServer_DumpResponse|ResourceUsageResponse|null {
  switch(Body[type]) {
    case 'NONE': return null; 
    case 'FBS_Worker_DumpResponse': return accessor(index, new DumpResponse())! as DumpResponse;
    case 'FBS_Worker_ResourceUsageResponse': return accessor(index, new ResourceUsageResponse())! as ResourceUsageResponse;
    case 'FBS_WebRtcServer_DumpResponse': return accessor(index, new FBS_WebRtcServer_DumpResponse())! as FBS_WebRtcServer_DumpResponse;
    case 'FBS_Router_DumpResponse': return accessor(index, new FBS_Router_DumpResponse())! as FBS_Router_DumpResponse;
    case 'FBS_Transport_DumpResponse': return accessor(index, new FBS_Transport_DumpResponse())! as FBS_Transport_DumpResponse;
    case 'FBS_Transport_ConsumeResponse': return accessor(index, new ConsumeResponse())! as ConsumeResponse;
    default: return null;
  }
}
