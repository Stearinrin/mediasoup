// automatically generated by the FlatBuffers compiler, do not modify

import { RouterDumpResponse, RouterDumpResponseT } from '../../fbs/router/router-dump-response';
import { ConsumeResponse, ConsumeResponseT } from '../../fbs/transport/consume-response';
import { TransportDumpResponse, TransportDumpResponseT } from '../../fbs/transport/transport-dump-response';
import { WebRtcServerDumpResponse, WebRtcServerDumpResponseT } from '../../fbs/web-rtc-server/web-rtc-server-dump-response';
import { ResourceUsageResponse, ResourceUsageResponseT } from '../../fbs/worker/resource-usage-response';
import { WorkerDumpResponse, WorkerDumpResponseT } from '../../fbs/worker/worker-dump-response';


export enum Body {
  NONE = 0,
  FBS_Worker_WorkerDumpResponse = 1,
  FBS_Worker_ResourceUsageResponse = 2,
  FBS_WebRtcServer_WebRtcServerDumpResponse = 3,
  FBS_Router_RouterDumpResponse = 4,
  FBS_Transport_TransportDumpResponse = 5,
  FBS_Transport_ConsumeResponse = 6
}

export function unionToBody(
  type: Body,
  accessor: (obj:ConsumeResponse|ResourceUsageResponse|RouterDumpResponse|TransportDumpResponse|WebRtcServerDumpResponse|WorkerDumpResponse) => ConsumeResponse|ResourceUsageResponse|RouterDumpResponse|TransportDumpResponse|WebRtcServerDumpResponse|WorkerDumpResponse|null
): ConsumeResponse|ResourceUsageResponse|RouterDumpResponse|TransportDumpResponse|WebRtcServerDumpResponse|WorkerDumpResponse|null {
  switch(Body[type]) {
    case 'NONE': return null; 
    case 'FBS_Worker_WorkerDumpResponse': return accessor(new WorkerDumpResponse())! as WorkerDumpResponse;
    case 'FBS_Worker_ResourceUsageResponse': return accessor(new ResourceUsageResponse())! as ResourceUsageResponse;
    case 'FBS_WebRtcServer_WebRtcServerDumpResponse': return accessor(new WebRtcServerDumpResponse())! as WebRtcServerDumpResponse;
    case 'FBS_Router_RouterDumpResponse': return accessor(new RouterDumpResponse())! as RouterDumpResponse;
    case 'FBS_Transport_TransportDumpResponse': return accessor(new TransportDumpResponse())! as TransportDumpResponse;
    case 'FBS_Transport_ConsumeResponse': return accessor(new ConsumeResponse())! as ConsumeResponse;
    default: return null;
  }
}

export function unionListToBody(
  type: Body, 
  accessor: (index: number, obj:ConsumeResponse|ResourceUsageResponse|RouterDumpResponse|TransportDumpResponse|WebRtcServerDumpResponse|WorkerDumpResponse) => ConsumeResponse|ResourceUsageResponse|RouterDumpResponse|TransportDumpResponse|WebRtcServerDumpResponse|WorkerDumpResponse|null, 
  index: number
): ConsumeResponse|ResourceUsageResponse|RouterDumpResponse|TransportDumpResponse|WebRtcServerDumpResponse|WorkerDumpResponse|null {
  switch(Body[type]) {
    case 'NONE': return null; 
    case 'FBS_Worker_WorkerDumpResponse': return accessor(index, new WorkerDumpResponse())! as WorkerDumpResponse;
    case 'FBS_Worker_ResourceUsageResponse': return accessor(index, new ResourceUsageResponse())! as ResourceUsageResponse;
    case 'FBS_WebRtcServer_WebRtcServerDumpResponse': return accessor(index, new WebRtcServerDumpResponse())! as WebRtcServerDumpResponse;
    case 'FBS_Router_RouterDumpResponse': return accessor(index, new RouterDumpResponse())! as RouterDumpResponse;
    case 'FBS_Transport_TransportDumpResponse': return accessor(index, new TransportDumpResponse())! as TransportDumpResponse;
    case 'FBS_Transport_ConsumeResponse': return accessor(index, new ConsumeResponse())! as ConsumeResponse;
    default: return null;
  }
}
