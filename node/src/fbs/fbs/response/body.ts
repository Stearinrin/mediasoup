// automatically generated by the FlatBuffers compiler, do not modify

import { ConsumeResponse, ConsumeResponseT } from '../../fbs/transport/consume-response';
import { Dump, DumpT } from '../../fbs/worker/dump';
import { ResourceUsage, ResourceUsageT } from '../../fbs/worker/resource-usage';


export enum Body {
  NONE = 0,
  FBS_Worker_Dump = 1,
  FBS_Worker_ResourceUsage = 2,
  FBS_Transport_ConsumeResponse = 3
}

export function unionToBody(
  type: Body,
  accessor: (obj:ConsumeResponse|Dump|ResourceUsage) => ConsumeResponse|Dump|ResourceUsage|null
): ConsumeResponse|Dump|ResourceUsage|null {
  switch(Body[type]) {
    case 'NONE': return null; 
    case 'FBS_Worker_Dump': return accessor(new Dump())! as Dump;
    case 'FBS_Worker_ResourceUsage': return accessor(new ResourceUsage())! as ResourceUsage;
    case 'FBS_Transport_ConsumeResponse': return accessor(new ConsumeResponse())! as ConsumeResponse;
    default: return null;
  }
}

export function unionListToBody(
  type: Body, 
  accessor: (index: number, obj:ConsumeResponse|Dump|ResourceUsage) => ConsumeResponse|Dump|ResourceUsage|null, 
  index: number
): ConsumeResponse|Dump|ResourceUsage|null {
  switch(Body[type]) {
    case 'NONE': return null; 
    case 'FBS_Worker_Dump': return accessor(index, new Dump())! as Dump;
    case 'FBS_Worker_ResourceUsage': return accessor(index, new ResourceUsage())! as ResourceUsage;
    case 'FBS_Transport_ConsumeResponse': return accessor(index, new ConsumeResponse())! as ConsumeResponse;
    default: return null;
  }
}
