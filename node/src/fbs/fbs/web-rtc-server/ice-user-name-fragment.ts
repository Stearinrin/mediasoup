// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



export class IceUserNameFragment {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):IceUserNameFragment {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsIceUserNameFragment(bb:flatbuffers.ByteBuffer, obj?:IceUserNameFragment):IceUserNameFragment {
  return (obj || new IceUserNameFragment()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsIceUserNameFragment(bb:flatbuffers.ByteBuffer, obj?:IceUserNameFragment):IceUserNameFragment {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new IceUserNameFragment()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

localIceUsernameFragment():string|null
localIceUsernameFragment(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
localIceUsernameFragment(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

webRtcTransportId():string|null
webRtcTransportId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
webRtcTransportId(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startIceUserNameFragment(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addLocalIceUsernameFragment(builder:flatbuffers.Builder, localIceUsernameFragmentOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, localIceUsernameFragmentOffset, 0);
}

static addWebRtcTransportId(builder:flatbuffers.Builder, webRtcTransportIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, webRtcTransportIdOffset, 0);
}

static endIceUserNameFragment(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  builder.requiredField(offset, 4) // local_ice_username_fragment
  builder.requiredField(offset, 6) // web_rtc_transport_id
  return offset;
}

static createIceUserNameFragment(builder:flatbuffers.Builder, localIceUsernameFragmentOffset:flatbuffers.Offset, webRtcTransportIdOffset:flatbuffers.Offset):flatbuffers.Offset {
  IceUserNameFragment.startIceUserNameFragment(builder);
  IceUserNameFragment.addLocalIceUsernameFragment(builder, localIceUsernameFragmentOffset);
  IceUserNameFragment.addWebRtcTransportId(builder, webRtcTransportIdOffset);
  return IceUserNameFragment.endIceUserNameFragment(builder);
}

unpack(): IceUserNameFragmentT {
  return new IceUserNameFragmentT(
    this.localIceUsernameFragment(),
    this.webRtcTransportId()
  );
}


unpackTo(_o: IceUserNameFragmentT): void {
  _o.localIceUsernameFragment = this.localIceUsernameFragment();
  _o.webRtcTransportId = this.webRtcTransportId();
}
}

export class IceUserNameFragmentT {
constructor(
  public localIceUsernameFragment: string|Uint8Array|null = null,
  public webRtcTransportId: string|Uint8Array|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const localIceUsernameFragment = (this.localIceUsernameFragment !== null ? builder.createString(this.localIceUsernameFragment!) : 0);
  const webRtcTransportId = (this.webRtcTransportId !== null ? builder.createString(this.webRtcTransportId!) : 0);

  return IceUserNameFragment.createIceUserNameFragment(builder,
    localIceUsernameFragment,
    webRtcTransportId
  );
}
}
