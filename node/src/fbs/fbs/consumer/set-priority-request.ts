// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



export class SetPriorityRequest {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SetPriorityRequest {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSetPriorityRequest(bb:flatbuffers.ByteBuffer, obj?:SetPriorityRequest):SetPriorityRequest {
  return (obj || new SetPriorityRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSetPriorityRequest(bb:flatbuffers.ByteBuffer, obj?:SetPriorityRequest):SetPriorityRequest {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SetPriorityRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

priority():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
}

static startSetPriorityRequest(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addPriority(builder:flatbuffers.Builder, priority:number) {
  builder.addFieldInt8(0, priority, 0);
}

static endSetPriorityRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSetPriorityRequest(builder:flatbuffers.Builder, priority:number):flatbuffers.Offset {
  SetPriorityRequest.startSetPriorityRequest(builder);
  SetPriorityRequest.addPriority(builder, priority);
  return SetPriorityRequest.endSetPriorityRequest(builder);
}

unpack(): SetPriorityRequestT {
  return new SetPriorityRequestT(
    this.priority()
  );
}


unpackTo(_o: SetPriorityRequestT): void {
  _o.priority = this.priority();
}
}

export class SetPriorityRequestT {
constructor(
  public priority: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SetPriorityRequest.createSetPriorityRequest(builder,
    this.priority
  );
}
}
