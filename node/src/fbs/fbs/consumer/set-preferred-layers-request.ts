// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { ConsumerLayers, ConsumerLayersT } from '../../fbs/consumer/consumer-layers';


export class SetPreferredLayersRequest {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SetPreferredLayersRequest {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSetPreferredLayersRequest(bb:flatbuffers.ByteBuffer, obj?:SetPreferredLayersRequest):SetPreferredLayersRequest {
  return (obj || new SetPreferredLayersRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSetPreferredLayersRequest(bb:flatbuffers.ByteBuffer, obj?:SetPreferredLayersRequest):SetPreferredLayersRequest {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SetPreferredLayersRequest()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

preferredLayers(obj?:ConsumerLayers):ConsumerLayers|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new ConsumerLayers()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startSetPreferredLayersRequest(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addPreferredLayers(builder:flatbuffers.Builder, preferredLayersOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, preferredLayersOffset, 0);
}

static endSetPreferredLayersRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  builder.requiredField(offset, 4) // preferred_layers
  return offset;
}

static createSetPreferredLayersRequest(builder:flatbuffers.Builder, preferredLayersOffset:flatbuffers.Offset):flatbuffers.Offset {
  SetPreferredLayersRequest.startSetPreferredLayersRequest(builder);
  SetPreferredLayersRequest.addPreferredLayers(builder, preferredLayersOffset);
  return SetPreferredLayersRequest.endSetPreferredLayersRequest(builder);
}

unpack(): SetPreferredLayersRequestT {
  return new SetPreferredLayersRequestT(
    (this.preferredLayers() !== null ? this.preferredLayers()!.unpack() : null)
  );
}


unpackTo(_o: SetPreferredLayersRequestT): void {
  _o.preferredLayers = (this.preferredLayers() !== null ? this.preferredLayers()!.unpack() : null);
}
}

export class SetPreferredLayersRequestT {
constructor(
  public preferredLayers: ConsumerLayersT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const preferredLayers = (this.preferredLayers !== null ? this.preferredLayers!.pack(builder) : 0);

  return SetPreferredLayersRequest.createSetPreferredLayersRequest(builder,
    preferredLayers
  );
}
}
