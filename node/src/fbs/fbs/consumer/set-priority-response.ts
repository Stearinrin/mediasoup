// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



export class SetPriorityResponse {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):SetPriorityResponse {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsSetPriorityResponse(bb:flatbuffers.ByteBuffer, obj?:SetPriorityResponse):SetPriorityResponse {
  return (obj || new SetPriorityResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsSetPriorityResponse(bb:flatbuffers.ByteBuffer, obj?:SetPriorityResponse):SetPriorityResponse {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new SetPriorityResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

priority():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
}

static startSetPriorityResponse(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addPriority(builder:flatbuffers.Builder, priority:number) {
  builder.addFieldInt8(0, priority, 0);
}

static endSetPriorityResponse(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createSetPriorityResponse(builder:flatbuffers.Builder, priority:number):flatbuffers.Offset {
  SetPriorityResponse.startSetPriorityResponse(builder);
  SetPriorityResponse.addPriority(builder, priority);
  return SetPriorityResponse.endSetPriorityResponse(builder);
}

unpack(): SetPriorityResponseT {
  return new SetPriorityResponseT(
    this.priority()
  );
}


unpackTo(_o: SetPriorityResponseT): void {
  _o.priority = this.priority();
}
}

export class SetPriorityResponseT {
constructor(
  public priority: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return SetPriorityResponse.createSetPriorityResponse(builder,
    this.priority
  );
}
}
