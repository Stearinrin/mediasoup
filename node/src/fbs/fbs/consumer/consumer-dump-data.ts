// automatically generated by the FlatBuffers compiler, do not modify

import { BaseConsumerDump, BaseConsumerDumpT } from '../../fbs/consumer/base-consumer-dump';
import { PipeConsumerDump, PipeConsumerDumpT } from '../../fbs/consumer/pipe-consumer-dump';
import { SimpleConsumerDump, SimpleConsumerDumpT } from '../../fbs/consumer/simple-consumer-dump';
import { SimulcastConsumerDump, SimulcastConsumerDumpT } from '../../fbs/consumer/simulcast-consumer-dump';
import { SvcConsumerDump, SvcConsumerDumpT } from '../../fbs/consumer/svc-consumer-dump';


export enum ConsumerDumpData {
  NONE = 0,
  BaseConsumerDump = 1,
  SimpleConsumerDump = 2,
  SimulcastConsumerDump = 3,
  SvcConsumerDump = 4,
  PipeConsumerDump = 5
}

export function unionToConsumerDumpData(
  type: ConsumerDumpData,
  accessor: (obj:BaseConsumerDump|PipeConsumerDump|SimpleConsumerDump|SimulcastConsumerDump|SvcConsumerDump) => BaseConsumerDump|PipeConsumerDump|SimpleConsumerDump|SimulcastConsumerDump|SvcConsumerDump|null
): BaseConsumerDump|PipeConsumerDump|SimpleConsumerDump|SimulcastConsumerDump|SvcConsumerDump|null {
  switch(ConsumerDumpData[type]) {
    case 'NONE': return null; 
    case 'BaseConsumerDump': return accessor(new BaseConsumerDump())! as BaseConsumerDump;
    case 'SimpleConsumerDump': return accessor(new SimpleConsumerDump())! as SimpleConsumerDump;
    case 'SimulcastConsumerDump': return accessor(new SimulcastConsumerDump())! as SimulcastConsumerDump;
    case 'SvcConsumerDump': return accessor(new SvcConsumerDump())! as SvcConsumerDump;
    case 'PipeConsumerDump': return accessor(new PipeConsumerDump())! as PipeConsumerDump;
    default: return null;
  }
}

export function unionListToConsumerDumpData(
  type: ConsumerDumpData, 
  accessor: (index: number, obj:BaseConsumerDump|PipeConsumerDump|SimpleConsumerDump|SimulcastConsumerDump|SvcConsumerDump) => BaseConsumerDump|PipeConsumerDump|SimpleConsumerDump|SimulcastConsumerDump|SvcConsumerDump|null, 
  index: number
): BaseConsumerDump|PipeConsumerDump|SimpleConsumerDump|SimulcastConsumerDump|SvcConsumerDump|null {
  switch(ConsumerDumpData[type]) {
    case 'NONE': return null; 
    case 'BaseConsumerDump': return accessor(index, new BaseConsumerDump())! as BaseConsumerDump;
    case 'SimpleConsumerDump': return accessor(index, new SimpleConsumerDump())! as SimpleConsumerDump;
    case 'SimulcastConsumerDump': return accessor(index, new SimulcastConsumerDump())! as SimulcastConsumerDump;
    case 'SvcConsumerDump': return accessor(index, new SvcConsumerDump())! as SvcConsumerDump;
    case 'PipeConsumerDump': return accessor(index, new PipeConsumerDump())! as PipeConsumerDump;
    default: return null;
  }
}
