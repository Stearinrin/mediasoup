// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { ConsumerLayers } from '../../f-b-s/consumer/consumer-layers';


export class ConsumeResponse {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
__init(i:number, bb:flatbuffers.ByteBuffer):ConsumeResponse {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsConsumeResponse(bb:flatbuffers.ByteBuffer, obj?:ConsumeResponse):ConsumeResponse {
  return (obj || new ConsumeResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsConsumeResponse(bb:flatbuffers.ByteBuffer, obj?:ConsumeResponse):ConsumeResponse {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new ConsumeResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

paused():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

producerPaused():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

score():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;
}

preferredLayers(obj?:ConsumerLayers):ConsumerLayers|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new ConsumerLayers()).__init(this.bb_pos + offset, this.bb!) : null;
}

static startConsumeResponse(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addPaused(builder:flatbuffers.Builder, paused:boolean) {
  builder.addFieldInt8(0, +paused, +false);
}

static addProducerPaused(builder:flatbuffers.Builder, producerPaused:boolean) {
  builder.addFieldInt8(1, +producerPaused, +false);
}

static addScore(builder:flatbuffers.Builder, score:number) {
  builder.addFieldInt8(2, score, 0);
}

static addPreferredLayers(builder:flatbuffers.Builder, preferredLayersOffset:flatbuffers.Offset) {
  builder.addFieldStruct(3, preferredLayersOffset, 0);
}

static endConsumeResponse(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

}
