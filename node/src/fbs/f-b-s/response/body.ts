// automatically generated by the FlatBuffers compiler, do not modify

import { ConsumeResponse, ConsumeResponseT } from '../../f-b-s/transport/consume-response';
import { DumpResponse, DumpResponseT } from '../../f-b-s/worker/dump-response';


export enum Body{
  NONE = 0,
  FBS_Worker_DumpResponse = 1,
  FBS_Transport_ConsumeResponse = 2
}

export function unionToBody(
  type: Body,
  accessor: (obj:ConsumeResponse|DumpResponse) => ConsumeResponse|DumpResponse|null
): ConsumeResponse|DumpResponse|null {
  switch(Body[type]) {
    case 'NONE': return null; 
    case 'FBS_Worker_DumpResponse': return accessor(new DumpResponse())! as DumpResponse;
    case 'FBS_Transport_ConsumeResponse': return accessor(new ConsumeResponse())! as ConsumeResponse;
    default: return null;
  }
}

export function unionListToBody(
  type: Body, 
  accessor: (index: number, obj:ConsumeResponse|DumpResponse) => ConsumeResponse|DumpResponse|null, 
  index: number
): ConsumeResponse|DumpResponse|null {
  switch(Body[type]) {
    case 'NONE': return null; 
    case 'FBS_Worker_DumpResponse': return accessor(index, new DumpResponse())! as DumpResponse;
    case 'FBS_Transport_ConsumeResponse': return accessor(index, new ConsumeResponse())! as ConsumeResponse;
    default: return null;
  }
}

