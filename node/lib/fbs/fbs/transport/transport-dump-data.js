"use strict";
// automatically generated by the FlatBuffers compiler, do not modify
Object.defineProperty(exports, "__esModule", { value: true });
exports.unionListToTransportDumpData = exports.unionToTransportDumpData = exports.TransportDumpData = void 0;
const base_transport_dump_1 = require("../../fbs/transport/base-transport-dump");
const direct_transport_dump_1 = require("../../fbs/transport/direct-transport-dump");
const pipe_transport_dump_1 = require("../../fbs/transport/pipe-transport-dump");
const plain_transport_dump_1 = require("../../fbs/transport/plain-transport-dump");
const web_rtc_transport_dump_1 = require("../../fbs/transport/web-rtc-transport-dump");
var TransportDumpData;
(function (TransportDumpData) {
    TransportDumpData[TransportDumpData["NONE"] = 0] = "NONE";
    TransportDumpData[TransportDumpData["BaseTransportDump"] = 1] = "BaseTransportDump";
    TransportDumpData[TransportDumpData["DirectTransportDump"] = 2] = "DirectTransportDump";
    TransportDumpData[TransportDumpData["PipeTransportDump"] = 3] = "PipeTransportDump";
    TransportDumpData[TransportDumpData["PlainTransportDump"] = 4] = "PlainTransportDump";
    TransportDumpData[TransportDumpData["WebRtcTransportDump"] = 5] = "WebRtcTransportDump";
})(TransportDumpData = exports.TransportDumpData || (exports.TransportDumpData = {}));
function unionToTransportDumpData(type, accessor) {
    switch (TransportDumpData[type]) {
        case 'NONE': return null;
        case 'BaseTransportDump': return accessor(new base_transport_dump_1.BaseTransportDump());
        case 'DirectTransportDump': return accessor(new direct_transport_dump_1.DirectTransportDump());
        case 'PipeTransportDump': return accessor(new pipe_transport_dump_1.PipeTransportDump());
        case 'PlainTransportDump': return accessor(new plain_transport_dump_1.PlainTransportDump());
        case 'WebRtcTransportDump': return accessor(new web_rtc_transport_dump_1.WebRtcTransportDump());
        default: return null;
    }
}
exports.unionToTransportDumpData = unionToTransportDumpData;
function unionListToTransportDumpData(type, accessor, index) {
    switch (TransportDumpData[type]) {
        case 'NONE': return null;
        case 'BaseTransportDump': return accessor(index, new base_transport_dump_1.BaseTransportDump());
        case 'DirectTransportDump': return accessor(index, new direct_transport_dump_1.DirectTransportDump());
        case 'PipeTransportDump': return accessor(index, new pipe_transport_dump_1.PipeTransportDump());
        case 'PlainTransportDump': return accessor(index, new plain_transport_dump_1.PlainTransportDump());
        case 'WebRtcTransportDump': return accessor(index, new web_rtc_transport_dump_1.WebRtcTransportDump());
        default: return null;
    }
}
exports.unionListToTransportDumpData = unionListToTransportDumpData;
