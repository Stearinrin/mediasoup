include "transport.fbs";
include "sctpParameters.fbs";

namespace FBS.WebRtcTransport;

table WebRtcTransportListenIndividual {
  listen_ips:[FBS.Transport.TransportListenIp] (required);
  port:uint16;
}

table WebRtcTransportListenServer {
  web_rtc_server_id:string (required);
}

union WebRtcTransportListen {
  WebRtcTransportListenIndividual,
  WebRtcTransportListenServer,
}

table WebRtcTransportOptions {
  base:FBS.Transport.BaseTransportOptions;
  listen:WebRtcTransportListen (required);
  enable_udp:bool = true;
  enable_tcp:bool = false;
  prefer_udp:bool = false;
  prefer_tcp:bool = false;
}

// Notifications from Worker.

table IceSelectedTupleChangeNotification {
  tuple:FBS.Transport.Tuple (required);
}

enum IceState: uint8 { NEW = 0, CONNECTED, COMPLETED, DISCONNECTED, CLOSED }
enum DtlsState: uint8 { NEW = 0, CONNECTING, CONNECTED, FAILED, CLOSED }

table IceStateChangeNotification {
  ice_state:IceState;
}

table DtlsStateChangeNotification {
  dtls_state:DtlsState;
  remote_cert:string;
}
